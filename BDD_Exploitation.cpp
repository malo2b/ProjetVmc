///////////////////////////////////////////////////////////
//
//  BDD_Exploitation.cpp
//  Implementation of the Class BDD_Exploitation
//  Generated by Enterprise Architect
//  Created on:      15-Mar-2021 08:51:05
//  Original author: 
//  
///////////////////////////////////////////////////////////
//  Modification history:
//  
//
///////////////////////////////////////////////////////////

#include "BDD_Exploitation.h"

MYSQL *mySQL;
BDD_Exploitation hBDD_Exploitation;

BDD_Exploitation::BDD_Exploitation(){

}


BDD_Exploitation::~BDD_Exploitation(){

}


void BDD_Exploitation::ecrireDonnees(DonneesExploitationParZone* donnees[], int nbrZones) {
    int i = 0;
    char requete[256];
    while (i < nbrZones)
        {
        memset(requete, '\0', 256);
        sprintf(requete, "INSERT INTO `bdd_exploitation`.`donnees_exploitation_par_zone` (`id`, `zoneid`, `zoneType`, `localType`, `hygrometrie`, `volumeZone`, `debitAirExtrait`, `timeStamp`) VALUES  (%d, %d, %d, %d, %f, %f, %f, CURRENT_TIMESTAMP)", NULL, donnees[i]->getZoneId(), donnees[i]->getZoneType(), donnees[i]->getLocalType(), donnees[i]->getHygrometrie(), donnees[i]->getVolumeZone(), donnees[i]->getDebitAirExtrait());
        mysql_query(mySQL,requete);
        i++;
        }
}

int BDD_Exploitation::connexionBDD(char* ip, char* id, char* password, int port) {
mySQL = mysql_init(NULL);

if (!mysql_real_connect(mySQL, ip, id, password, "bdd_exploitation", port, NULL, 0)) //   ici, c'est ok en distant
    return 0; // la connection a échoué
else
    return 1;    // la connection a réussi
}


void BDD_Exploitation::deconnexionBDD(){
    mysql_close(mySQL);
}



